# ----------------------------------------------------------------------------------------------- #
#   Global variables
# ----------------------------------------------------------------------------------------------- #
- PATH:
    H2: &H2_cs_path
        U:/__[FileSync]__/Coding/Python/CrossSectionFile/H2
    CO2: &CO2_cs_path
        E:/Coding/PlasmaChemistry/_cs_list/koelman2016
    CO: &CO_cs_path
        E:/Coding/PlasmaChemistry/_cs_list/koelman2016

- H2_vib: &H2_vib_0-14
    [
    H2,      H2(v1),  H2(v2),  H2(v3),  H2(v4),
    H2(v5),  H2(v6),  H2(v7),  H2(v8),  H2(v9),
    H2(v10), H2(v11), H2(v12), H2(v13), H2(v14)
    ]

- H2_vib: &H2_vib_0-13
    [
    H2,      H2(v1),  H2(v2),  H2(v3),  H2(v4),
    H2(v5),  H2(v6),  H2(v7),  H2(v8),  H2(v9),
    H2(v10), H2(v11), H2(v12), H2(v13)
    ]
- CO_vib: &CO_vib_0-10
    [
    CO,     CO(v1), CO(v2), CO(v3), CO(v4),
    CO(v5), CO(v6), CO(v7), CO(v8), CO(v9),
    CO(v10)
    ]


- Molecule:
    mass:
    - &CO2_mass   44
    - &CO_mass    28

# =============================================================================================== #
#   H2 kineticon
# =============================================================================================== #
# ----------------------------------------------------------------------------------------------- #
#   H2 electron vibration
# ----------------------------------------------------------------------------------------------- #
- Rctn_block: &H2_ele_vib_forward
    type:
        EXCITATION
    formula: 
        E + H2(v_A_) => E + H2(v_B_)
    kstr: 
        cs_path/H2(X)_to_H2(X)_vibexc/H2(v_A_)_to_H2(v_B_).csv
    threshold:
        _thres_
    where: # where is only supported for formula and kstr. After iterator process.
        abbr:
            cs_path: *H2_cs_path
            H2(v0):  H2
    iterator: &iterator_H2_ele_vib
        repl:
            formula:
                _A_: v_lower
                _B_: v_upper
            kstr:
                _A_: v_lower
                _B_: v_upper
            threshold:
                _thres_: H2_vib_energy_in_eV(v=upper) - H2_vib_energy_in_eV(v=v_lower)
        loop:
            product:
                v_lower: range(15)
                v_upper: range(15)
        condition:
            v_lower < v_upper

- Rctn_block: &H2_ele_vib_backward
    <<: *H2_ele_vib_forward
    type:
        DEEXCITATION
    iterator:
        <<: *iterator_H2_ele_vib
        condition:
            _from > _to

# ----------------------------------------------------------------------------------------------- #
#   H2 electron dissociation
# ----------------------------------------------------------------------------------------------- #
- Rctn_block: &_H2_ele_dis
    type:
        EXCITATION
    formula:
        E + H2(v_A_) => E + H + H
    threshold:
        _thres_
    where:
        abbr:
            cs_path: *H2_cs_path
            H2(v0): H2

- Rctn_block: &H2_ele_dis_via_b
    <<: *_H2_ele_dis
    kstr:
        "cs_path/H2(X)_to_H2(_b)_to_2H/H2(v_A_)_to_H2(b)_to_2H.csv"
    iterator:
        repl:
            formula:
                _A_: v
            kstr:
                _A_: v
            threshold:
                _thres_: thres
        loop:
            product:
                v: range(14)

- Rctn_block: &H2_ele_dis_via_B
    <<: *_H2_ele_dis
    kstr:
        cs_path/H2(X)_to_H2(B)_to_2H/H2(v_A_)_to_H2(B)_to_2H.csv
    iterator:
        repl:
            formula:
                _A_: v
            kstr:
                _A_: v
            threshold:
                _thres_: thres
        loop:
            zip:
                v: range(14)
                thres: ''

- Rctn_block: &H2_ele_dis_via_B_1
    <<: *_H2_ele_dis
    kstr:
        cs_path/H2(X)_to_H2(B')_to_2H/H2(v_A_)_to_H2(B')_to_2H.csv
    iterator:
        repl:
            formula:
                _A_: v
            kstr:
                _A_: v
            threshold:
                _thres_: thres
        loop:
            zip:
                v: range(14)
                thres: ''

- Rctn_block: &H2_ele_dis_rctn_via_B_2
    <<: *_H2_ele_dis
    kstr:
        "cs_path/H2(X)_to_H2(B'')_to_2H/H2(v_A_)_to_H2(B'')_to_2H.csv"
    iterator:
        repl:
            formula:
                _A_: v
            kstr:
                _A_: v
            threshold:
                _thres_: thres
        loop:
            zip:
                v: range(14)
                thres: ''

# ----------------------------------------------------------------------------------------------- #
- Rctn_block: &H2_ele_dis_att
    type:
        ATTACHMENT
    formula:
        E + H2(v_A_) => H + H^-
    kstr:
        "cs_path/H2(X)_to_H2-_to_H+H-/H2(v_A_)_to_H2-_to_H+H-.csv"
    threshold:
        _thres_
    iterator:
        repl:
            formula:
                _A_: v
            kstr:
                _A_: v
            threshold:
                _thres_: thres
        loop:
            zip:
                _v: range(6)

# =============================================================================================== #
#   CO2 ele vibrational excitation
# =============================================================================================== #
- Rctn_block: &CO2_ele_vib_forward
    type:
        EXCITATION
    formula:
        E + CO2(v_A_) => E + CO2(v_B_)
    kstr:
        "cs_path/cs_set/scaling/CO2/0-21/cs_A@_excitation_B@.lut"
    threshold:
        thres@
    where:
        abbr:
            cs_path: *CO2_cs_path
            CO2(v0): CO2
    iterator:
        repl:
            formula:
                A@: _from
                B@: _to
            kstr:
                A@: _from
                B@: _to
            threshold:
                thres@: CO2_vib_energy_in_eV(v=_to) - CO2_vib_energy_in_eV(v=_from)
        loop:
            product:
                v_lower: range(21)
                v_upper: range(21)
        condition:
            _from < _to

- Rctn_block: &CO2_ele_vib_backward
    <<: *CO2_ele_vib_forward
    type:
        DEEXCITATION
    kstr:
        cs_path/cs_set/reverse/CO2/cs_CO2v_B__vibexc_CO2v_A__reverse.lut
    iterator:
        <<: *iterator_CO2_ele_vib
        condition:
            v_lower > v_upper

# ----------------------------------------------------------------------------------------------- #
#   CO2 electron dissociation
# ----------------------------------------------------------------------------------------------- #
- Rctn_block: &CO2_ele_diss
    type:
        EXCITATION
    formula:
        E + CO2(v_A_) => E + CO + O
    threshold: # for the 10 eV channel, TODO
        [12.00, 11.709, 11.421, 11.135, 10.854,
        10.575, 10.299, 10.026, 9.7565, 9.49,
        9.2265, 8.9662, 8.7089, 8.4548, 8.2037,
        7.9557, 7.7109, 7.4691, 7.2304, 6.9948,
        6.7623, 6.5328]
    kstr:
        cs_path/CO2_dis/cs_CO2v_A__diss_CO_O.dat
    where:
        abbr:
            cs_path: *CO2_dis_cs_path
            CO2(v0): CO2
    iterator:
        repl:
            formula:
                _A_: v
            kstr:
                _A_: v
        loop:
            product:
                v: range(22)

# ----------------------------------------------------------------------------------------------- #
#   CO ele vibrational excitation
# ----------------------------------------------------------------------------------------------- #
- Rctn_block: &CO_ele_vib_forward
    type:
        excitation
    formula:
        E + CO(v_A_) => E + CO(v_B_)
    threshold:
        _thres_
    kstr:
        cs_path/cs_set/scaling/CO/cs_COv_A__vibexc_COv_B_.lut
    where:
        abbr:
            cs_path: *CO_cs_path
            CO(v0): CO
    iterator: &iterator_CO_ele_vib
        repl:
            formula:
                _A_: v_lower
                _B_: v_upper
            kstr:
                _A_: v_lower
                _B_: v_upper
            threshold:
                _thres_: CO_vib_energy_in_eV(v=v_upper) - CO_vib_energy_in_eV(v=v_lower)
        loop:
            product:
                v_lower: range(11)
                v_upper: range(11)
        condition:
            v_lower < v_upper

- Rctn_block: &CO_ele_vib_backward
    <<: *CO_ele_vib_forward
    type:
        DEEXCITATION
    kstr:
        cs_path/cs_set/reverse/CO/cs_COv_B__vibexc_COv_A__reverse.lut
    iterator:
        <<: *iterator_CO_ele_vib
        condition:
            v_lower > v_upper



# =============================================================================================== #
#   Vibrational relaxation process
# =============================================================================================== #
- Rctn_block: &CO

# - Rctn_block: &CO2_VT_with_CO
#     type:
#         VT
#     formula:
#         CO2(v1) + M@ => CO2 + M@
#     kstr:   k10 * F
#     where:
#         vari:
#             - k10_0:  !LT [4.25e-1, -407, 824]
#             - k10_1:  !LT [4.25e-1, -404, 1096]
#             - k10_2:  !LT [4.25e-1, -252, 685]
#             - k10:    k10_0 + k10_1 + k10_2
#             - _mu:    22
#             - _r:     4.587156
#             - Lij:    0.32 * dE_K/_r * sqrt(_mu/Tgas)
#             - F:      0.5 * (3 - exp(-2/3*Lij)) * exp(-2/3*Lij)


- Rctn_block: &CO2_VT_with_CO2
    type:
        VT
    formula:
        CO2(v_A_) + _M_ => CO2(v_B_) + _M_
    kstr:
        k10 * F 
    where:
        abbr:
            CO2(v0): CO2
        vari:
            - k10_0:  !LT [4.25e-1, -407, 824]
            - k10_1:  !LT [4.25e-1, -404, 1096]
            - k10_2:  !LT [4.25e-1, -252, 685]
            - k10:    k10_0 + k10_1 + k10_2
            - _mu:    22
            - _r:     4.587156
            - Lij:    0.32 * _dE_ / _r * sqrt(_mu/Tgas)
            - F:      0.5 * (3 - exp(-2/3*Lij)) * exp(-2/3*Lij)
    iterator:
        repl:
            formula:
                _A_: _i_
                _B_: _i_ - 1
                _M_: _M_
            kstr:
                _dE_: CO2_vib_energy_in_K(v=(0,0,_i_)) - CO2_vib_energy_in_K(v=(0,0,_i_-1))
        loop:
            product:
                _M_: [CO,]
                _i_: range(1, 22)

- Rctn_block: &CO2_VT_with_CO2_reversed
    <<: *CO2_VT_with_CO2
    formula:
        CO2(v_B_) + _M_ => CO2(v_A_) + _M_
    kstr:
        k10 * F * exp(-_dE_/Tgas)

- Rctn_block: &H2_VT_with_CO2

- Rctn_block: &H2_VT_with_CO
- Rctn_block: &H2_VT_with_H2
- Rctn_block: &H2_VT_with_H2O


- Rctn_block: &CO_VT_with_CO2
- Rctn_block: &CO_VT_with_H2
- Rctn_block: &CO_VT_with_CO
- Rctn_block: &CO_VT_with_H2O

- Rctn_block: &H2O_VT_with_CO2
- Rctn_block: &H2O_VT_with_H2
- Rctn_block: &H2O_VT_with_CO
- Rctn_block: &H2O_VT_with_H2O



# ----------------------------------------------------------------------------------------------- #
- Rctn_block: &OH_VT
    type: VT
    formula:
        OH(v1) + M@ => OH + M@
    kstr:
        A@ * exp( 39.3 - 210 * Tgas**(-1/3) )
    zip:
        M@: [N2,  O2,  CO,  CO2, H2O]
        A@: [1.0, 3.0, 1.0, 7.0, 60.0]

# ----------------------------------------------------------------------------------------------- #
#   vib reactions
#
- Rctn_block: &CO2_vib_to_CO_O
    type: vib_rctn
    formula:
        CO2(vA@) + M@ => CO + O + M@
    kstr:
        3.91e-10 * exp(-49430) / Tgas * _factor_ * exp(_a_*_E_vib_ / Tgas)
    where:
        vari:
            - _a_: 0.5
    iterator:
        repl:
            formula:
                A@: _i_
                M@: _M_[0]
            kstr:
                _E_vib_: CO2_vib_energy_in_eV(v=(0, 0, _i_)) - CO2_vib_energy_in_eV(v=(0, 0, _i_-1))
                _factor_: _M_[1]
        loop:
            _M_: [[CO2, 1], [CO, 2], [H2, 10], [H2O, 60]]
            _i_: range(1, 22)
# ----------------------------------------------------------------------------------------------- #
# ----------------------------------------------------------------------------------------------- #
- The reactions considered:
    # - *CO2_VT_with_CO
    electron reactions:
        H2_ele_vib_forward:     *H2_ele_vib_forward
        H2_ele_vib_backward:    *H2_ele_vib_backward
        H2_ele_dis_via_b:       *H2_ele_dis_via_b
        CO2_ele_vib_forward:    *CO2_ele_vib_forward
        CO2_ele_vib_backward:   *CO2_ele_vib_backward
        CO2_ele_diss:           *CO2_ele_diss
        CO_ele_vib_forward:     *CO_ele_vib_forward
        CO_ele_vib_backward:    *CO_ele_vib_backward
        # CO_ele_dis
        # CO_ele_vib_backward:    *CO_ele_vib_rctn_backward
        CO2_VT_with_CO2:            *CO2_VT_with_CO2
        CO2_VT_with_CO2_reversed:   *CO2_VT_with_CO2_reversed
        # CO2=>CO+O:              *CO2_vib_to_CO_O
    # - *H2_ele_dis_rctn_via_B_1
    # - *H2_ele_dis_rctn_via_B_2
